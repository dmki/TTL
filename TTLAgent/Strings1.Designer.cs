//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TTLAgent {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TTLAgent.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entering Command Line mode. Enter your command, then press ENTER..
        /// </summary>
        internal static string CMD_1 {
            get {
                return ResourceManager.GetString("CMD_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type ? or HELP for help. Empty command line means exit..
        /// </summary>
        internal static string CMD_2 {
            get {
                return ResourceManager.GetString("CMD_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ©2016 - {0}. Dmitry Kirsanov. https://kirsanov.net.
        /// </summary>
        internal static string Copyright {
            get {
                return ResourceManager.GetString("Copyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event Log prepared OK..
        /// </summary>
        internal static string Event_Log_prepared {
            get {
                return ResourceManager.GetString("Event_Log_prepared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event Log could not be prepared. Ensure you have admin privileges..
        /// </summary>
        internal static string EventLogPrepFailed {
            get {
                return ResourceManager.GetString("EventLogPrepFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available commands:
        ///? or help - show this screen
        ///exit or just [ENTER] - quit this program
        ///local [ON/OFF] - switch between direct (local) and web service access.
        /// </summary>
        internal static string HelpCMD {
            get {
                return ResourceManager.GetString("HelpCMD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid command.
        /// </summary>
        internal static string InvalidCommand {
            get {
                return ResourceManager.GetString("InvalidCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ttl.exe [target file or dir] [parameters]
        ///Example: ttl.exe c:\temp\t60 /days:60 /noempty /recycle /subs /v
        ///
        ///Parameters:
        ///
        ////bfg		Alternate secure deletion - very fast, but less secure.
        ////ede		Ensure Directory Exists - if target directory does not exist, it will be created.
        ////days:[x]	Files / directories should be X days old. That&apos;s modification or creation time, whichever is latest.
        ////freespace:[X]	Only perform this operation, if free space in target drive falls below X Gb.
        ////keep:[number of files]	Delet [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ParamList {
            get {
                return ResourceManager.GetString("ParamList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both Verbose and Silent modes selected. Therefore, Silent mode switched off..
        /// </summary>
        internal static string SilentVerboseConflict {
            get {
                return ResourceManager.GetString("SilentVerboseConflict", resourceCulture);
            }
        }
    }
}
